set(CXXTEST_USE_PYTHON TRUE)
find_package(CxxTest)
if(CXXTEST_FOUND)
   include_directories(${CXXTEST_INCLUDE_DIR} ${CMAKE_BINARY_DIR}/src)
   ENABLE_TESTING()
   CXXTEST_ADD_TEST(mh_api_network_unittest network_unittest.cpp ${CMAKE_CURRENT_SOURCE_DIR}/mh_api_network.h)
   CXXTEST_ADD_TEST(mh_api_host_unittest host_unittest.cpp ${CMAKE_CURRENT_SOURCE_DIR}/mh_api_host.h)
   CXXTEST_ADD_TEST(mh_api_sysconfig_common_unittest sysconfig_common_unittest.cpp ${CMAKE_CURRENT_SOURCE_DIR}/mh_api_sysconfig_common.h)
   CXXTEST_ADD_TEST(mh_api_sysconfig_unittest sysconfig_unittest.cpp ${CMAKE_CURRENT_SOURCE_DIR}/mh_api_sysconfig_${VARIANT}.h)
   CXXTEST_ADD_TEST(mh_api_utilities_unittest utilities_unittest.cpp ${CMAKE_CURRENT_SOURCE_DIR}/mh_api_utilities.h)
   CXXTEST_ADD_TEST(mh_hsa_unittest hsa_unittest.cpp ${CMAKE_CURRENT_SOURCE_DIR}/mh_hsa_${VARIANT}.h)
   add_library(mh_tester SHARED test_utilities.c)
   target_link_libraries(mh_tester ${pcre_LIBRARIES})
   target_link_libraries(mh_api_network_unittest mh_tester mnetwork)
   target_link_libraries(mh_api_host_unittest mh_tester mhost)
   target_link_libraries(mh_api_sysconfig_unittest mh_tester msysconfig)
   target_link_libraries(mh_api_sysconfig_common_unittest mh_tester msysconfig)
   target_link_libraries(mh_api_utilities_unittest mh_tester mcommon)
   target_link_libraries(mh_hsa_unittest mh_tester ${glib_LIBRARIES} mcommon)
endif(CXXTEST_FOUND)

